#!/usr/bin/env php
<?php

require_once __DIR__.'/../vendor/autoload.php';

use Symfony\Component\Finder\Finder;

if (file_exists('soap_client.phar')) {
    unlink('soap_client.phar');
}

function stripWhiteSpace($source)
{
    $output = '';
    foreach (token_get_all($source) as $token) {
        if (is_string($token)) {
            $output .= $token;
        } elseif (in_array($token[0], array(T_COMMENT, T_DOC_COMMENT))) {
            $output .= str_repeat("\n", substr_count($token[1], "\n"));
        } elseif (T_WHITESPACE === $token[0]) {
            // reduce wide spaces
            $whitespace = preg_replace('{[ \t]+}', ' ', $token[1]);
            // normalize newlines to \n
            $whitespace = preg_replace('{(?:\r\n|\r|\n)}', "\n", $whitespace);
            // trim leading spaces
            $whitespace = preg_replace('{\n +}', "\n", $whitespace);
            $output .= $whitespace;
        } else {
            $output .= $token[1];
        }
    }

    return $output;
}

echo "==> Creating phar in soap_client.phar\n";

$phar = new \Phar('soap_client.phar', 0, 'soap_client.phar');
$phar->setSignatureAlgorithm(\Phar::SHA1);
$phar->startBuffering();

$finder = new Finder();
$finder
    ->files()
    ->ignoreVCS(true)
    ->in(__DIR__.'/../bin')
    ->in(__DIR__.'/../config')
    ->in(__DIR__.'/../src')
    ->in(__DIR__.'/../vendor')
    ->exclude('Tests')
    ->exclude('tests')
    ->name('*.php')
    ->name('*.yml')
    ->name('console');

foreach ($finder as $file) {
    $path = str_replace(dirname(__DIR__).DIRECTORY_SEPARATOR, '', $file->getRealPath());
    $content = preg_replace('{^#!/usr/bin/env php\s*}', '', $file->getContents());
    $phar->addFromString($path, stripWhiteSpace($content));
}

$phar->setStub("#!/usr/bin/env php
<?php
Phar::mapPhar('soap_client.phar');
require 'phar://soap_client.phar/bin/console';
__HALT_COMPILER();");

$phar->stopBuffering();
$phar->compressFiles(\Phar::GZ);

unset($phar);
chmod('soap_client.phar', 0755);

echo "==> Done creating phar archive\n";
